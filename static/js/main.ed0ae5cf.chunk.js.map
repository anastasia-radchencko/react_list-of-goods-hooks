{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","SORT_DEFAULT","sortField","setSortField","isReversed","setReversedField","goods","toReverse","visibleGoods","sort","good1","good2","SORT_ALPHABET","localeCompare","SORT_LENGTH","length","reverse","getvisibleGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,yBAAAA,E,qBAAAA,E,iBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,cAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAuCH,oBAAS,GAAhD,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAjCR,SACEA,EACAJ,EACAK,GAEA,IAAMC,EAAY,YAAOF,GAqBzB,OAnBIJ,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKL,EAASe,cACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,YACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXR,GACFC,EAAaQ,UAGRR,EAOOS,CACZnB,EAAiBI,EAAWE,GAQ9B,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYlB,IAAcL,EAASe,gBACvCS,QAAS,kBAAMlB,EAAaN,EAASe,gBAJvC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYlB,IAAcL,EAASiB,cACvCO,QAAS,kBAAMlB,EAAaN,EAASiB,cAJvC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAahB,IACjBiB,QAAS,kBAAMhB,GAAkBD,IAJnC,sBASEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAvCe,WACvBlB,EAAaN,EAASI,cACtBI,GAAiB,IAkCX,sBAUJ,6BACE,oBAAIa,UAAU,OAAd,SACGZ,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAIL,UAAU,OAAkB,UAAQ,OAAxC,SACGK,GADuBA,cC5GtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed0ae5cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SORT_ALPHABET = 'alphabet',\n  SORT_LENGTH = 'length',\n  SORT_DEFAULT = '',\n}\n\nfunction getvisibleGoods(\n  goods: string[],\n  sortField: SortType,\n  toReverse: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortField) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.SORT_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.SORT_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (toReverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.SORT_DEFAULT);\n  const [isReversed, setReversedField] = useState(false);\n\n  const goods = getvisibleGoods(\n    goodsFromServer, sortField, isReversed,\n  );\n\n  const handleResetClick = () => {\n    setSortField(SortType.SORT_DEFAULT);\n    setReversedField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortType.SORT_ALPHABET })}\n          onClick={() => setSortField(SortType.SORT_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortType.SORT_LENGTH })}\n          onClick={() => setSortField(SortType.SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setReversedField(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul className=\"list\">\n          {goods.map(good => (\n            <li className=\"item\" key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}